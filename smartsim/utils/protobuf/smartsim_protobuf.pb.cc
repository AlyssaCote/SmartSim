// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smartsim_protobuf.proto

#include "smartsim_protobuf.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace SmartSimProtobuf {
class ScalarUInt32DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScalarUInt32> _instance;
} _ScalarUInt32_default_instance_;
class ScalarUInt64DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScalarUInt64> _instance;
} _ScalarUInt64_default_instance_;
class ScalarSInt32DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScalarSInt32> _instance;
} _ScalarSInt32_default_instance_;
class ScalarSInt64DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScalarSInt64> _instance;
} _ScalarSInt64_default_instance_;
class ScalarFloatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScalarFloat> _instance;
} _ScalarFloat_default_instance_;
class ScalarDoubleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScalarDouble> _instance;
} _ScalarDouble_default_instance_;
class ArrayUInt32DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArrayUInt32> _instance;
} _ArrayUInt32_default_instance_;
class ArrayUInt64DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArrayUInt64> _instance;
} _ArrayUInt64_default_instance_;
class ArraySInt32DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArraySInt32> _instance;
} _ArraySInt32_default_instance_;
class ArraySInt64DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArraySInt64> _instance;
} _ArraySInt64_default_instance_;
class ArrayFloatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArrayFloat> _instance;
} _ArrayFloat_default_instance_;
class ArrayDoubleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ArrayDouble> _instance;
} _ArrayDouble_default_instance_;
}  // namespace SmartSimProtobuf
static void InitDefaultsscc_info_ArrayDouble_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ArrayDouble_default_instance_;
    new (ptr) ::SmartSimProtobuf::ArrayDouble();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ArrayDouble::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrayDouble_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArrayDouble_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ArrayFloat_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ArrayFloat_default_instance_;
    new (ptr) ::SmartSimProtobuf::ArrayFloat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ArrayFloat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrayFloat_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArrayFloat_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ArraySInt32_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ArraySInt32_default_instance_;
    new (ptr) ::SmartSimProtobuf::ArraySInt32();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ArraySInt32::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArraySInt32_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArraySInt32_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ArraySInt64_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ArraySInt64_default_instance_;
    new (ptr) ::SmartSimProtobuf::ArraySInt64();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ArraySInt64::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArraySInt64_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArraySInt64_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ArrayUInt32_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ArrayUInt32_default_instance_;
    new (ptr) ::SmartSimProtobuf::ArrayUInt32();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ArrayUInt32::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrayUInt32_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArrayUInt32_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ArrayUInt64_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ArrayUInt64_default_instance_;
    new (ptr) ::SmartSimProtobuf::ArrayUInt64();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ArrayUInt64::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ArrayUInt64_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ArrayUInt64_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ScalarDouble_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ScalarDouble_default_instance_;
    new (ptr) ::SmartSimProtobuf::ScalarDouble();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ScalarDouble::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScalarDouble_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScalarDouble_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ScalarFloat_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ScalarFloat_default_instance_;
    new (ptr) ::SmartSimProtobuf::ScalarFloat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ScalarFloat::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScalarFloat_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScalarFloat_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ScalarSInt32_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ScalarSInt32_default_instance_;
    new (ptr) ::SmartSimProtobuf::ScalarSInt32();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ScalarSInt32::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScalarSInt32_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScalarSInt32_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ScalarSInt64_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ScalarSInt64_default_instance_;
    new (ptr) ::SmartSimProtobuf::ScalarSInt64();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ScalarSInt64::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScalarSInt64_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScalarSInt64_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ScalarUInt32_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ScalarUInt32_default_instance_;
    new (ptr) ::SmartSimProtobuf::ScalarUInt32();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ScalarUInt32::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScalarUInt32_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScalarUInt32_smartsim_5fprotobuf_2eproto}, {}};

static void InitDefaultsscc_info_ScalarUInt64_smartsim_5fprotobuf_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::SmartSimProtobuf::_ScalarUInt64_default_instance_;
    new (ptr) ::SmartSimProtobuf::ScalarUInt64();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SmartSimProtobuf::ScalarUInt64::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScalarUInt64_smartsim_5fprotobuf_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScalarUInt64_smartsim_5fprotobuf_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_smartsim_5fprotobuf_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_smartsim_5fprotobuf_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_smartsim_5fprotobuf_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_smartsim_5fprotobuf_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarUInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarUInt32, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarUInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarUInt64, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarSInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarSInt32, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarSInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarSInt64, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarFloat, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ScalarDouble, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayUInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayUInt32, dimension_),
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayUInt32, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayUInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayUInt64, dimension_),
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayUInt64, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArraySInt32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArraySInt32, dimension_),
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArraySInt32, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArraySInt64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArraySInt64, dimension_),
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArraySInt64, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayFloat, dimension_),
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayFloat, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayDouble, dimension_),
  PROTOBUF_FIELD_OFFSET(::SmartSimProtobuf::ArrayDouble, data_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SmartSimProtobuf::ScalarUInt32)},
  { 6, -1, sizeof(::SmartSimProtobuf::ScalarUInt64)},
  { 12, -1, sizeof(::SmartSimProtobuf::ScalarSInt32)},
  { 18, -1, sizeof(::SmartSimProtobuf::ScalarSInt64)},
  { 24, -1, sizeof(::SmartSimProtobuf::ScalarFloat)},
  { 30, -1, sizeof(::SmartSimProtobuf::ScalarDouble)},
  { 36, -1, sizeof(::SmartSimProtobuf::ArrayUInt32)},
  { 43, -1, sizeof(::SmartSimProtobuf::ArrayUInt64)},
  { 50, -1, sizeof(::SmartSimProtobuf::ArraySInt32)},
  { 57, -1, sizeof(::SmartSimProtobuf::ArraySInt64)},
  { 64, -1, sizeof(::SmartSimProtobuf::ArrayFloat)},
  { 71, -1, sizeof(::SmartSimProtobuf::ArrayDouble)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ScalarUInt32_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ScalarUInt64_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ScalarSInt32_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ScalarSInt64_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ScalarFloat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ScalarDouble_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ArrayUInt32_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ArrayUInt64_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ArraySInt32_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ArraySInt64_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ArrayFloat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::SmartSimProtobuf::_ArrayDouble_default_instance_),
};

const char descriptor_table_protodef_smartsim_5fprotobuf_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027smartsim_protobuf.proto\022\020SmartSimProto"
  "buf\"\034\n\014ScalarUInt32\022\014\n\004data\030\001 \001(\r\"\034\n\014Sca"
  "larUInt64\022\014\n\004data\030\001 \001(\004\"\034\n\014ScalarSInt32\022"
  "\014\n\004data\030\001 \001(\021\"\034\n\014ScalarSInt64\022\014\n\004data\030\001 "
  "\001(\022\"\033\n\013ScalarFloat\022\014\n\004data\030\001 \001(\002\"\034\n\014Scal"
  "arDouble\022\014\n\004data\030\001 \001(\001\"6\n\013ArrayUInt32\022\025\n"
  "\tdimension\030\001 \003(\004B\002\020\001\022\020\n\004data\030\002 \003(\rB\002\020\001\"6"
  "\n\013ArrayUInt64\022\025\n\tdimension\030\001 \003(\004B\002\020\001\022\020\n\004"
  "data\030\002 \003(\004B\002\020\001\"6\n\013ArraySInt32\022\025\n\tdimensi"
  "on\030\001 \003(\004B\002\020\001\022\020\n\004data\030\002 \003(\021B\002\020\001\"6\n\013ArrayS"
  "Int64\022\025\n\tdimension\030\001 \003(\004B\002\020\001\022\020\n\004data\030\002 \003"
  "(\022B\002\020\001\"5\n\nArrayFloat\022\025\n\tdimension\030\001 \003(\004B"
  "\002\020\001\022\020\n\004data\030\002 \003(\002B\002\020\001\"6\n\013ArrayDouble\022\025\n\t"
  "dimension\030\001 \003(\004B\002\020\001\022\020\n\004data\030\002 \003(\001B\002\020\001b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_smartsim_5fprotobuf_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_smartsim_5fprotobuf_2eproto_sccs[12] = {
  &scc_info_ArrayDouble_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ArrayFloat_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ArraySInt32_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ArraySInt64_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ArrayUInt32_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ArrayUInt64_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ScalarDouble_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ScalarFloat_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ScalarSInt32_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ScalarSInt64_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ScalarUInt32_smartsim_5fprotobuf_2eproto.base,
  &scc_info_ScalarUInt64_smartsim_5fprotobuf_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_smartsim_5fprotobuf_2eproto_once;
static bool descriptor_table_smartsim_5fprotobuf_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_smartsim_5fprotobuf_2eproto = {
  &descriptor_table_smartsim_5fprotobuf_2eproto_initialized, descriptor_table_protodef_smartsim_5fprotobuf_2eproto, "smartsim_protobuf.proto", 565,
  &descriptor_table_smartsim_5fprotobuf_2eproto_once, descriptor_table_smartsim_5fprotobuf_2eproto_sccs, descriptor_table_smartsim_5fprotobuf_2eproto_deps, 12, 0,
  schemas, file_default_instances, TableStruct_smartsim_5fprotobuf_2eproto::offsets,
  file_level_metadata_smartsim_5fprotobuf_2eproto, 12, file_level_enum_descriptors_smartsim_5fprotobuf_2eproto, file_level_service_descriptors_smartsim_5fprotobuf_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_smartsim_5fprotobuf_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_smartsim_5fprotobuf_2eproto), true);
namespace SmartSimProtobuf {

// ===================================================================

void ScalarUInt32::InitAsDefaultInstance() {
}
class ScalarUInt32::_Internal {
 public:
};

ScalarUInt32::ScalarUInt32()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ScalarUInt32)
}
ScalarUInt32::ScalarUInt32(const ScalarUInt32& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ScalarUInt32)
}

void ScalarUInt32::SharedCtor() {
  data_ = 0u;
}

ScalarUInt32::~ScalarUInt32() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ScalarUInt32)
  SharedDtor();
}

void ScalarUInt32::SharedDtor() {
}

void ScalarUInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScalarUInt32& ScalarUInt32::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScalarUInt32_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ScalarUInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ScalarUInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0u;
  _internal_metadata_.Clear();
}

const char* ScalarUInt32::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScalarUInt32::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ScalarUInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ScalarUInt32)
  return target;
}

size_t ScalarUInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ScalarUInt32)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScalarUInt32::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ScalarUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarUInt32* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScalarUInt32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ScalarUInt32)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ScalarUInt32)
    MergeFrom(*source);
  }
}

void ScalarUInt32::MergeFrom(const ScalarUInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ScalarUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    _internal_set_data(from._internal_data());
  }
}

void ScalarUInt32::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ScalarUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarUInt32::CopyFrom(const ScalarUInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ScalarUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarUInt32::IsInitialized() const {
  return true;
}

void ScalarUInt32::InternalSwap(ScalarUInt32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarUInt32::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScalarUInt64::InitAsDefaultInstance() {
}
class ScalarUInt64::_Internal {
 public:
};

ScalarUInt64::ScalarUInt64()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ScalarUInt64)
}
ScalarUInt64::ScalarUInt64(const ScalarUInt64& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ScalarUInt64)
}

void ScalarUInt64::SharedCtor() {
  data_ = PROTOBUF_ULONGLONG(0);
}

ScalarUInt64::~ScalarUInt64() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ScalarUInt64)
  SharedDtor();
}

void ScalarUInt64::SharedDtor() {
}

void ScalarUInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScalarUInt64& ScalarUInt64::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScalarUInt64_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ScalarUInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ScalarUInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ScalarUInt64::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScalarUInt64::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ScalarUInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 data = 1;
  if (this->data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ScalarUInt64)
  return target;
}

size_t ScalarUInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ScalarUInt64)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScalarUInt64::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ScalarUInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarUInt64* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScalarUInt64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ScalarUInt64)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ScalarUInt64)
    MergeFrom(*source);
  }
}

void ScalarUInt64::MergeFrom(const ScalarUInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ScalarUInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    _internal_set_data(from._internal_data());
  }
}

void ScalarUInt64::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ScalarUInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarUInt64::CopyFrom(const ScalarUInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ScalarUInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarUInt64::IsInitialized() const {
  return true;
}

void ScalarUInt64::InternalSwap(ScalarUInt64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarUInt64::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScalarSInt32::InitAsDefaultInstance() {
}
class ScalarSInt32::_Internal {
 public:
};

ScalarSInt32::ScalarSInt32()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ScalarSInt32)
}
ScalarSInt32::ScalarSInt32(const ScalarSInt32& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ScalarSInt32)
}

void ScalarSInt32::SharedCtor() {
  data_ = 0;
}

ScalarSInt32::~ScalarSInt32() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ScalarSInt32)
  SharedDtor();
}

void ScalarSInt32::SharedDtor() {
}

void ScalarSInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScalarSInt32& ScalarSInt32::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScalarSInt32_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ScalarSInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ScalarSInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear();
}

const char* ScalarSInt32::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint32 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScalarSInt32::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ScalarSInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 data = 1;
  if (this->data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ScalarSInt32)
  return target;
}

size_t ScalarSInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ScalarSInt32)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint32 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScalarSInt32::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ScalarSInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarSInt32* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScalarSInt32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ScalarSInt32)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ScalarSInt32)
    MergeFrom(*source);
  }
}

void ScalarSInt32::MergeFrom(const ScalarSInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ScalarSInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    _internal_set_data(from._internal_data());
  }
}

void ScalarSInt32::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ScalarSInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarSInt32::CopyFrom(const ScalarSInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ScalarSInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarSInt32::IsInitialized() const {
  return true;
}

void ScalarSInt32::InternalSwap(ScalarSInt32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarSInt32::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScalarSInt64::InitAsDefaultInstance() {
}
class ScalarSInt64::_Internal {
 public:
};

ScalarSInt64::ScalarSInt64()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ScalarSInt64)
}
ScalarSInt64::ScalarSInt64(const ScalarSInt64& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ScalarSInt64)
}

void ScalarSInt64::SharedCtor() {
  data_ = PROTOBUF_LONGLONG(0);
}

ScalarSInt64::~ScalarSInt64() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ScalarSInt64)
  SharedDtor();
}

void ScalarSInt64::SharedDtor() {
}

void ScalarSInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScalarSInt64& ScalarSInt64::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScalarSInt64_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ScalarSInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ScalarSInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ScalarSInt64::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // sint64 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScalarSInt64::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ScalarSInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 data = 1;
  if (this->data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ScalarSInt64)
  return target;
}

size_t ScalarSInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ScalarSInt64)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // sint64 data = 1;
  if (this->data() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt64Size(
        this->_internal_data());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScalarSInt64::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ScalarSInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarSInt64* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScalarSInt64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ScalarSInt64)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ScalarSInt64)
    MergeFrom(*source);
  }
}

void ScalarSInt64::MergeFrom(const ScalarSInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ScalarSInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data() != 0) {
    _internal_set_data(from._internal_data());
  }
}

void ScalarSInt64::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ScalarSInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarSInt64::CopyFrom(const ScalarSInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ScalarSInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarSInt64::IsInitialized() const {
  return true;
}

void ScalarSInt64::InternalSwap(ScalarSInt64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarSInt64::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScalarFloat::InitAsDefaultInstance() {
}
class ScalarFloat::_Internal {
 public:
};

ScalarFloat::ScalarFloat()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ScalarFloat)
}
ScalarFloat::ScalarFloat(const ScalarFloat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ScalarFloat)
}

void ScalarFloat::SharedCtor() {
  data_ = 0;
}

ScalarFloat::~ScalarFloat() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ScalarFloat)
  SharedDtor();
}

void ScalarFloat::SharedDtor() {
}

void ScalarFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScalarFloat& ScalarFloat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScalarFloat_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ScalarFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ScalarFloat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear();
}

const char* ScalarFloat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScalarFloat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ScalarFloat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float data = 1;
  if (!(this->data() <= 0 && this->data() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ScalarFloat)
  return target;
}

size_t ScalarFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ScalarFloat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float data = 1;
  if (!(this->data() <= 0 && this->data() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScalarFloat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ScalarFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarFloat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScalarFloat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ScalarFloat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ScalarFloat)
    MergeFrom(*source);
  }
}

void ScalarFloat::MergeFrom(const ScalarFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ScalarFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.data() <= 0 && from.data() >= 0)) {
    _internal_set_data(from._internal_data());
  }
}

void ScalarFloat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ScalarFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarFloat::CopyFrom(const ScalarFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ScalarFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarFloat::IsInitialized() const {
  return true;
}

void ScalarFloat::InternalSwap(ScalarFloat* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarFloat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ScalarDouble::InitAsDefaultInstance() {
}
class ScalarDouble::_Internal {
 public:
};

ScalarDouble::ScalarDouble()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ScalarDouble)
}
ScalarDouble::ScalarDouble(const ScalarDouble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ScalarDouble)
}

void ScalarDouble::SharedCtor() {
  data_ = 0;
}

ScalarDouble::~ScalarDouble() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ScalarDouble)
  SharedDtor();
}

void ScalarDouble::SharedDtor() {
}

void ScalarDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScalarDouble& ScalarDouble::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScalarDouble_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ScalarDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ScalarDouble)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear();
}

const char* ScalarDouble::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScalarDouble::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ScalarDouble)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double data = 1;
  if (!(this->data() <= 0 && this->data() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ScalarDouble)
  return target;
}

size_t ScalarDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ScalarDouble)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double data = 1;
  if (!(this->data() <= 0 && this->data() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScalarDouble::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ScalarDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarDouble* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScalarDouble>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ScalarDouble)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ScalarDouble)
    MergeFrom(*source);
  }
}

void ScalarDouble::MergeFrom(const ScalarDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ScalarDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.data() <= 0 && from.data() >= 0)) {
    _internal_set_data(from._internal_data());
  }
}

void ScalarDouble::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ScalarDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarDouble::CopyFrom(const ScalarDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ScalarDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarDouble::IsInitialized() const {
  return true;
}

void ScalarDouble::InternalSwap(ScalarDouble* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScalarDouble::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArrayUInt32::InitAsDefaultInstance() {
}
class ArrayUInt32::_Internal {
 public:
};

ArrayUInt32::ArrayUInt32()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ArrayUInt32)
}
ArrayUInt32::ArrayUInt32(const ArrayUInt32& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      dimension_(from.dimension_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ArrayUInt32)
}

void ArrayUInt32::SharedCtor() {
}

ArrayUInt32::~ArrayUInt32() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ArrayUInt32)
  SharedDtor();
}

void ArrayUInt32::SharedDtor() {
}

void ArrayUInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArrayUInt32& ArrayUInt32::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArrayUInt32_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ArrayUInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ArrayUInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_.Clear();
  data_.Clear();
  _internal_metadata_.Clear();
}

const char* ArrayUInt32::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 dimension = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_dimension(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 data = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayUInt32::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ArrayUInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    int byte_size = _dimension_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_dimension(), byte_size, target);
    }
  }

  // repeated uint32 data = 2 [packed = true];
  {
    int byte_size = _data_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ArrayUInt32)
  return target;
}

size_t ArrayUInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ArrayUInt32)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->dimension_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _dimension_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 data = 2 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayUInt32::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ArrayUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayUInt32* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayUInt32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ArrayUInt32)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ArrayUInt32)
    MergeFrom(*source);
  }
}

void ArrayUInt32::MergeFrom(const ArrayUInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ArrayUInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  data_.MergeFrom(from.data_);
}

void ArrayUInt32::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ArrayUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayUInt32::CopyFrom(const ArrayUInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ArrayUInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayUInt32::IsInitialized() const {
  return true;
}

void ArrayUInt32::InternalSwap(ArrayUInt32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dimension_.InternalSwap(&other->dimension_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayUInt32::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArrayUInt64::InitAsDefaultInstance() {
}
class ArrayUInt64::_Internal {
 public:
};

ArrayUInt64::ArrayUInt64()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ArrayUInt64)
}
ArrayUInt64::ArrayUInt64(const ArrayUInt64& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      dimension_(from.dimension_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ArrayUInt64)
}

void ArrayUInt64::SharedCtor() {
}

ArrayUInt64::~ArrayUInt64() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ArrayUInt64)
  SharedDtor();
}

void ArrayUInt64::SharedDtor() {
}

void ArrayUInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArrayUInt64& ArrayUInt64::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArrayUInt64_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ArrayUInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ArrayUInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_.Clear();
  data_.Clear();
  _internal_metadata_.Clear();
}

const char* ArrayUInt64::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 dimension = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_dimension(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 data = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayUInt64::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ArrayUInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    int byte_size = _dimension_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_dimension(), byte_size, target);
    }
  }

  // repeated uint64 data = 2 [packed = true];
  {
    int byte_size = _data_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ArrayUInt64)
  return target;
}

size_t ArrayUInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ArrayUInt64)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->dimension_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _dimension_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint64 data = 2 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayUInt64::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ArrayUInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayUInt64* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayUInt64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ArrayUInt64)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ArrayUInt64)
    MergeFrom(*source);
  }
}

void ArrayUInt64::MergeFrom(const ArrayUInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ArrayUInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  data_.MergeFrom(from.data_);
}

void ArrayUInt64::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ArrayUInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayUInt64::CopyFrom(const ArrayUInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ArrayUInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayUInt64::IsInitialized() const {
  return true;
}

void ArrayUInt64::InternalSwap(ArrayUInt64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dimension_.InternalSwap(&other->dimension_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayUInt64::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArraySInt32::InitAsDefaultInstance() {
}
class ArraySInt32::_Internal {
 public:
};

ArraySInt32::ArraySInt32()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ArraySInt32)
}
ArraySInt32::ArraySInt32(const ArraySInt32& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      dimension_(from.dimension_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ArraySInt32)
}

void ArraySInt32::SharedCtor() {
}

ArraySInt32::~ArraySInt32() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ArraySInt32)
  SharedDtor();
}

void ArraySInt32::SharedDtor() {
}

void ArraySInt32::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArraySInt32& ArraySInt32::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArraySInt32_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ArraySInt32::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ArraySInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_.Clear();
  data_.Clear();
  _internal_metadata_.Clear();
}

const char* ArraySInt32::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 dimension = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_dimension(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated sint32 data = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt32Parser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArraySInt32::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ArraySInt32)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    int byte_size = _dimension_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_dimension(), byte_size, target);
    }
  }

  // repeated sint32 data = 2 [packed = true];
  {
    int byte_size = _data_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteSInt32Packed(
          2, _internal_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ArraySInt32)
  return target;
}

size_t ArraySInt32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ArraySInt32)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->dimension_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _dimension_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint32 data = 2 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt32Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArraySInt32::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ArraySInt32)
  GOOGLE_DCHECK_NE(&from, this);
  const ArraySInt32* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArraySInt32>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ArraySInt32)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ArraySInt32)
    MergeFrom(*source);
  }
}

void ArraySInt32::MergeFrom(const ArraySInt32& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ArraySInt32)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  data_.MergeFrom(from.data_);
}

void ArraySInt32::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ArraySInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArraySInt32::CopyFrom(const ArraySInt32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ArraySInt32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArraySInt32::IsInitialized() const {
  return true;
}

void ArraySInt32::InternalSwap(ArraySInt32* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dimension_.InternalSwap(&other->dimension_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArraySInt32::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArraySInt64::InitAsDefaultInstance() {
}
class ArraySInt64::_Internal {
 public:
};

ArraySInt64::ArraySInt64()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ArraySInt64)
}
ArraySInt64::ArraySInt64(const ArraySInt64& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      dimension_(from.dimension_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ArraySInt64)
}

void ArraySInt64::SharedCtor() {
}

ArraySInt64::~ArraySInt64() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ArraySInt64)
  SharedDtor();
}

void ArraySInt64::SharedDtor() {
}

void ArraySInt64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArraySInt64& ArraySInt64::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArraySInt64_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ArraySInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ArraySInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_.Clear();
  data_.Clear();
  _internal_metadata_.Clear();
}

const char* ArraySInt64::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 dimension = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_dimension(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated sint64 data = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedSInt64Parser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArraySInt64::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ArraySInt64)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    int byte_size = _dimension_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_dimension(), byte_size, target);
    }
  }

  // repeated sint64 data = 2 [packed = true];
  {
    int byte_size = _data_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteSInt64Packed(
          2, _internal_data(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ArraySInt64)
  return target;
}

size_t ArraySInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ArraySInt64)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->dimension_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _dimension_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated sint64 data = 2 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      SInt64Size(this->data_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArraySInt64::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ArraySInt64)
  GOOGLE_DCHECK_NE(&from, this);
  const ArraySInt64* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArraySInt64>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ArraySInt64)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ArraySInt64)
    MergeFrom(*source);
  }
}

void ArraySInt64::MergeFrom(const ArraySInt64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ArraySInt64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  data_.MergeFrom(from.data_);
}

void ArraySInt64::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ArraySInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArraySInt64::CopyFrom(const ArraySInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ArraySInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArraySInt64::IsInitialized() const {
  return true;
}

void ArraySInt64::InternalSwap(ArraySInt64* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dimension_.InternalSwap(&other->dimension_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArraySInt64::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArrayFloat::InitAsDefaultInstance() {
}
class ArrayFloat::_Internal {
 public:
};

ArrayFloat::ArrayFloat()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ArrayFloat)
}
ArrayFloat::ArrayFloat(const ArrayFloat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      dimension_(from.dimension_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ArrayFloat)
}

void ArrayFloat::SharedCtor() {
}

ArrayFloat::~ArrayFloat() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ArrayFloat)
  SharedDtor();
}

void ArrayFloat::SharedDtor() {
}

void ArrayFloat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArrayFloat& ArrayFloat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArrayFloat_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ArrayFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ArrayFloat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_.Clear();
  data_.Clear();
  _internal_metadata_.Clear();
}

const char* ArrayFloat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 dimension = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_dimension(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated float data = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayFloat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ArrayFloat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    int byte_size = _dimension_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_dimension(), byte_size, target);
    }
  }

  // repeated float data = 2 [packed = true];
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ArrayFloat)
  return target;
}

size_t ArrayFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ArrayFloat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->dimension_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _dimension_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated float data = 2 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_data_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayFloat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ArrayFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayFloat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayFloat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ArrayFloat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ArrayFloat)
    MergeFrom(*source);
  }
}

void ArrayFloat::MergeFrom(const ArrayFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ArrayFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  data_.MergeFrom(from.data_);
}

void ArrayFloat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ArrayFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayFloat::CopyFrom(const ArrayFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ArrayFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayFloat::IsInitialized() const {
  return true;
}

void ArrayFloat::InternalSwap(ArrayFloat* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dimension_.InternalSwap(&other->dimension_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayFloat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ArrayDouble::InitAsDefaultInstance() {
}
class ArrayDouble::_Internal {
 public:
};

ArrayDouble::ArrayDouble()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SmartSimProtobuf.ArrayDouble)
}
ArrayDouble::ArrayDouble(const ArrayDouble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      dimension_(from.dimension_),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SmartSimProtobuf.ArrayDouble)
}

void ArrayDouble::SharedCtor() {
}

ArrayDouble::~ArrayDouble() {
  // @@protoc_insertion_point(destructor:SmartSimProtobuf.ArrayDouble)
  SharedDtor();
}

void ArrayDouble::SharedDtor() {
}

void ArrayDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArrayDouble& ArrayDouble::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ArrayDouble_smartsim_5fprotobuf_2eproto.base);
  return *internal_default_instance();
}


void ArrayDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:SmartSimProtobuf.ArrayDouble)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_.Clear();
  data_.Clear();
  _internal_metadata_.Clear();
}

const char* ArrayDouble::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 dimension = 1 [packed = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_dimension(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double data = 2 [packed = true];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ArrayDouble::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SmartSimProtobuf.ArrayDouble)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    int byte_size = _dimension_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_dimension(), byte_size, target);
    }
  }

  // repeated double data = 2 [packed = true];
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SmartSimProtobuf.ArrayDouble)
  return target;
}

size_t ArrayDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SmartSimProtobuf.ArrayDouble)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 dimension = 1 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->dimension_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _dimension_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated double data = 2 [packed = true];
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_data_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArrayDouble::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SmartSimProtobuf.ArrayDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayDouble* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ArrayDouble>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SmartSimProtobuf.ArrayDouble)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SmartSimProtobuf.ArrayDouble)
    MergeFrom(*source);
  }
}

void ArrayDouble::MergeFrom(const ArrayDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SmartSimProtobuf.ArrayDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  data_.MergeFrom(from.data_);
}

void ArrayDouble::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SmartSimProtobuf.ArrayDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayDouble::CopyFrom(const ArrayDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SmartSimProtobuf.ArrayDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayDouble::IsInitialized() const {
  return true;
}

void ArrayDouble::InternalSwap(ArrayDouble* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  dimension_.InternalSwap(&other->dimension_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ArrayDouble::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace SmartSimProtobuf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ScalarUInt32* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ScalarUInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ScalarUInt32 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ScalarUInt64* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ScalarUInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ScalarUInt64 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ScalarSInt32* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ScalarSInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ScalarSInt32 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ScalarSInt64* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ScalarSInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ScalarSInt64 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ScalarFloat* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ScalarFloat >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ScalarFloat >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ScalarDouble* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ScalarDouble >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ScalarDouble >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ArrayUInt32* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ArrayUInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ArrayUInt32 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ArrayUInt64* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ArrayUInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ArrayUInt64 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ArraySInt32* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ArraySInt32 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ArraySInt32 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ArraySInt64* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ArraySInt64 >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ArraySInt64 >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ArrayFloat* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ArrayFloat >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ArrayFloat >(arena);
}
template<> PROTOBUF_NOINLINE ::SmartSimProtobuf::ArrayDouble* Arena::CreateMaybeMessage< ::SmartSimProtobuf::ArrayDouble >(Arena* arena) {
  return Arena::CreateInternal< ::SmartSimProtobuf::ArrayDouble >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
