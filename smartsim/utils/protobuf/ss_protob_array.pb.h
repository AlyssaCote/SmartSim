// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ss_protob_array.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ss_5fprotob_5farray_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ss_5fprotob_5farray_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ss_5fprotob_5farray_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ss_5fprotob_5farray_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ss_5fprotob_5farray_2eproto;
namespace SmartSimPBArray {
class ArrayDouble;
class ArrayDoubleDefaultTypeInternal;
extern ArrayDoubleDefaultTypeInternal _ArrayDouble_default_instance_;
class ArrayFloat;
class ArrayFloatDefaultTypeInternal;
extern ArrayFloatDefaultTypeInternal _ArrayFloat_default_instance_;
}  // namespace SmartSimPBArray
PROTOBUF_NAMESPACE_OPEN
template<> ::SmartSimPBArray::ArrayDouble* Arena::CreateMaybeMessage<::SmartSimPBArray::ArrayDouble>(Arena*);
template<> ::SmartSimPBArray::ArrayFloat* Arena::CreateMaybeMessage<::SmartSimPBArray::ArrayFloat>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace SmartSimPBArray {

// ===================================================================

class ArrayDouble :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimPBArray.ArrayDouble) */ {
 public:
  ArrayDouble();
  virtual ~ArrayDouble();

  ArrayDouble(const ArrayDouble& from);
  ArrayDouble(ArrayDouble&& from) noexcept
    : ArrayDouble() {
    *this = ::std::move(from);
  }

  inline ArrayDouble& operator=(const ArrayDouble& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArrayDouble& operator=(ArrayDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArrayDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayDouble* internal_default_instance() {
    return reinterpret_cast<const ArrayDouble*>(
               &_ArrayDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ArrayDouble& a, ArrayDouble& b) {
    a.Swap(&b);
  }
  inline void Swap(ArrayDouble* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArrayDouble* New() const final {
    return CreateMaybeMessage<ArrayDouble>(nullptr);
  }

  ArrayDouble* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArrayDouble>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArrayDouble& from);
  void MergeFrom(const ArrayDouble& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArrayDouble* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimPBArray.ArrayDouble";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ss_5fprotob_5farray_2eproto);
    return ::descriptor_table_ss_5fprotob_5farray_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated double data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  double _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_data() const;
  void _internal_add_data(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_data();
  public:
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimPBArray.ArrayDouble)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ss_5fprotob_5farray_2eproto;
};
// -------------------------------------------------------------------

class ArrayFloat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimPBArray.ArrayFloat) */ {
 public:
  ArrayFloat();
  virtual ~ArrayFloat();

  ArrayFloat(const ArrayFloat& from);
  ArrayFloat(ArrayFloat&& from) noexcept
    : ArrayFloat() {
    *this = ::std::move(from);
  }

  inline ArrayFloat& operator=(const ArrayFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArrayFloat& operator=(ArrayFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArrayFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayFloat* internal_default_instance() {
    return reinterpret_cast<const ArrayFloat*>(
               &_ArrayFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ArrayFloat& a, ArrayFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(ArrayFloat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArrayFloat* New() const final {
    return CreateMaybeMessage<ArrayFloat>(nullptr);
  }

  ArrayFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArrayFloat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArrayFloat& from);
  void MergeFrom(const ArrayFloat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArrayFloat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimPBArray.ArrayFloat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ss_5fprotob_5farray_2eproto);
    return ::descriptor_table_ss_5fprotob_5farray_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated float data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  float _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_data() const;
  void _internal_add_data(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_data();
  public:
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimPBArray.ArrayFloat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ss_5fprotob_5farray_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ArrayDouble

// repeated uint64 dimension = 1 [packed = true];
inline int ArrayDouble::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArrayDouble::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArrayDouble::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayDouble::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayDouble::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimPBArray.ArrayDouble.dimension)
  return _internal_dimension(index);
}
inline void ArrayDouble::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimPBArray.ArrayDouble.dimension)
}
inline void ArrayDouble::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArrayDouble::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimPBArray.ArrayDouble.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayDouble::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayDouble::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimPBArray.ArrayDouble.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayDouble::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayDouble::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimPBArray.ArrayDouble.dimension)
  return _internal_mutable_dimension();
}

// repeated double data = 2 [packed = true];
inline int ArrayDouble::_internal_data_size() const {
  return data_.size();
}
inline int ArrayDouble::data_size() const {
  return _internal_data_size();
}
inline void ArrayDouble::clear_data() {
  data_.Clear();
}
inline double ArrayDouble::_internal_data(int index) const {
  return data_.Get(index);
}
inline double ArrayDouble::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimPBArray.ArrayDouble.data)
  return _internal_data(index);
}
inline void ArrayDouble::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimPBArray.ArrayDouble.data)
}
inline void ArrayDouble::_internal_add_data(double value) {
  data_.Add(value);
}
inline void ArrayDouble::add_data(double value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimPBArray.ArrayDouble.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ArrayDouble::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ArrayDouble::data() const {
  // @@protoc_insertion_point(field_list:SmartSimPBArray.ArrayDouble.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ArrayDouble::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ArrayDouble::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimPBArray.ArrayDouble.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// ArrayFloat

// repeated uint64 dimension = 1 [packed = true];
inline int ArrayFloat::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArrayFloat::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArrayFloat::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayFloat::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayFloat::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimPBArray.ArrayFloat.dimension)
  return _internal_dimension(index);
}
inline void ArrayFloat::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimPBArray.ArrayFloat.dimension)
}
inline void ArrayFloat::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArrayFloat::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimPBArray.ArrayFloat.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayFloat::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayFloat::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimPBArray.ArrayFloat.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayFloat::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayFloat::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimPBArray.ArrayFloat.dimension)
  return _internal_mutable_dimension();
}

// repeated float data = 2 [packed = true];
inline int ArrayFloat::_internal_data_size() const {
  return data_.size();
}
inline int ArrayFloat::data_size() const {
  return _internal_data_size();
}
inline void ArrayFloat::clear_data() {
  data_.Clear();
}
inline float ArrayFloat::_internal_data(int index) const {
  return data_.Get(index);
}
inline float ArrayFloat::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimPBArray.ArrayFloat.data)
  return _internal_data(index);
}
inline void ArrayFloat::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimPBArray.ArrayFloat.data)
}
inline void ArrayFloat::_internal_add_data(float value) {
  data_.Add(value);
}
inline void ArrayFloat::add_data(float value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimPBArray.ArrayFloat.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ArrayFloat::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ArrayFloat::data() const {
  // @@protoc_insertion_point(field_list:SmartSimPBArray.ArrayFloat.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ArrayFloat::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ArrayFloat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimPBArray.ArrayFloat.data)
  return _internal_mutable_data();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SmartSimPBArray

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ss_5fprotob_5farray_2eproto
