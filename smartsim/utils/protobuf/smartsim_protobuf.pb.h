// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: smartsim_protobuf.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_smartsim_5fprotobuf_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_smartsim_5fprotobuf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_smartsim_5fprotobuf_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_smartsim_5fprotobuf_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_smartsim_5fprotobuf_2eproto;
namespace SmartSimProtobuf {
class ArrayDouble;
class ArrayDoubleDefaultTypeInternal;
extern ArrayDoubleDefaultTypeInternal _ArrayDouble_default_instance_;
class ArrayFloat;
class ArrayFloatDefaultTypeInternal;
extern ArrayFloatDefaultTypeInternal _ArrayFloat_default_instance_;
class ArraySInt32;
class ArraySInt32DefaultTypeInternal;
extern ArraySInt32DefaultTypeInternal _ArraySInt32_default_instance_;
class ArraySInt64;
class ArraySInt64DefaultTypeInternal;
extern ArraySInt64DefaultTypeInternal _ArraySInt64_default_instance_;
class ArrayUInt32;
class ArrayUInt32DefaultTypeInternal;
extern ArrayUInt32DefaultTypeInternal _ArrayUInt32_default_instance_;
class ArrayUInt64;
class ArrayUInt64DefaultTypeInternal;
extern ArrayUInt64DefaultTypeInternal _ArrayUInt64_default_instance_;
class ScalarDouble;
class ScalarDoubleDefaultTypeInternal;
extern ScalarDoubleDefaultTypeInternal _ScalarDouble_default_instance_;
class ScalarFloat;
class ScalarFloatDefaultTypeInternal;
extern ScalarFloatDefaultTypeInternal _ScalarFloat_default_instance_;
class ScalarSInt32;
class ScalarSInt32DefaultTypeInternal;
extern ScalarSInt32DefaultTypeInternal _ScalarSInt32_default_instance_;
class ScalarSInt64;
class ScalarSInt64DefaultTypeInternal;
extern ScalarSInt64DefaultTypeInternal _ScalarSInt64_default_instance_;
class ScalarUInt32;
class ScalarUInt32DefaultTypeInternal;
extern ScalarUInt32DefaultTypeInternal _ScalarUInt32_default_instance_;
class ScalarUInt64;
class ScalarUInt64DefaultTypeInternal;
extern ScalarUInt64DefaultTypeInternal _ScalarUInt64_default_instance_;
}  // namespace SmartSimProtobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::SmartSimProtobuf::ArrayDouble* Arena::CreateMaybeMessage<::SmartSimProtobuf::ArrayDouble>(Arena*);
template<> ::SmartSimProtobuf::ArrayFloat* Arena::CreateMaybeMessage<::SmartSimProtobuf::ArrayFloat>(Arena*);
template<> ::SmartSimProtobuf::ArraySInt32* Arena::CreateMaybeMessage<::SmartSimProtobuf::ArraySInt32>(Arena*);
template<> ::SmartSimProtobuf::ArraySInt64* Arena::CreateMaybeMessage<::SmartSimProtobuf::ArraySInt64>(Arena*);
template<> ::SmartSimProtobuf::ArrayUInt32* Arena::CreateMaybeMessage<::SmartSimProtobuf::ArrayUInt32>(Arena*);
template<> ::SmartSimProtobuf::ArrayUInt64* Arena::CreateMaybeMessage<::SmartSimProtobuf::ArrayUInt64>(Arena*);
template<> ::SmartSimProtobuf::ScalarDouble* Arena::CreateMaybeMessage<::SmartSimProtobuf::ScalarDouble>(Arena*);
template<> ::SmartSimProtobuf::ScalarFloat* Arena::CreateMaybeMessage<::SmartSimProtobuf::ScalarFloat>(Arena*);
template<> ::SmartSimProtobuf::ScalarSInt32* Arena::CreateMaybeMessage<::SmartSimProtobuf::ScalarSInt32>(Arena*);
template<> ::SmartSimProtobuf::ScalarSInt64* Arena::CreateMaybeMessage<::SmartSimProtobuf::ScalarSInt64>(Arena*);
template<> ::SmartSimProtobuf::ScalarUInt32* Arena::CreateMaybeMessage<::SmartSimProtobuf::ScalarUInt32>(Arena*);
template<> ::SmartSimProtobuf::ScalarUInt64* Arena::CreateMaybeMessage<::SmartSimProtobuf::ScalarUInt64>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace SmartSimProtobuf {

// ===================================================================

class ScalarUInt32 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ScalarUInt32) */ {
 public:
  ScalarUInt32();
  virtual ~ScalarUInt32();

  ScalarUInt32(const ScalarUInt32& from);
  ScalarUInt32(ScalarUInt32&& from) noexcept
    : ScalarUInt32() {
    *this = ::std::move(from);
  }

  inline ScalarUInt32& operator=(const ScalarUInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarUInt32& operator=(ScalarUInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ScalarUInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarUInt32* internal_default_instance() {
    return reinterpret_cast<const ScalarUInt32*>(
               &_ScalarUInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ScalarUInt32& a, ScalarUInt32& b) {
    a.Swap(&b);
  }
  inline void Swap(ScalarUInt32* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ScalarUInt32* New() const final {
    return CreateMaybeMessage<ScalarUInt32>(nullptr);
  }

  ScalarUInt32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ScalarUInt32>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ScalarUInt32& from);
  void MergeFrom(const ScalarUInt32& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarUInt32* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ScalarUInt32";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // uint32 data = 1;
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::uint32 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ScalarUInt32)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ScalarUInt64 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ScalarUInt64) */ {
 public:
  ScalarUInt64();
  virtual ~ScalarUInt64();

  ScalarUInt64(const ScalarUInt64& from);
  ScalarUInt64(ScalarUInt64&& from) noexcept
    : ScalarUInt64() {
    *this = ::std::move(from);
  }

  inline ScalarUInt64& operator=(const ScalarUInt64& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarUInt64& operator=(ScalarUInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ScalarUInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarUInt64* internal_default_instance() {
    return reinterpret_cast<const ScalarUInt64*>(
               &_ScalarUInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ScalarUInt64& a, ScalarUInt64& b) {
    a.Swap(&b);
  }
  inline void Swap(ScalarUInt64* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ScalarUInt64* New() const final {
    return CreateMaybeMessage<ScalarUInt64>(nullptr);
  }

  ScalarUInt64* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ScalarUInt64>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ScalarUInt64& from);
  void MergeFrom(const ScalarUInt64& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarUInt64* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ScalarUInt64";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // uint64 data = 1;
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::uint64 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ScalarUInt64)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ScalarSInt32 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ScalarSInt32) */ {
 public:
  ScalarSInt32();
  virtual ~ScalarSInt32();

  ScalarSInt32(const ScalarSInt32& from);
  ScalarSInt32(ScalarSInt32&& from) noexcept
    : ScalarSInt32() {
    *this = ::std::move(from);
  }

  inline ScalarSInt32& operator=(const ScalarSInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarSInt32& operator=(ScalarSInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ScalarSInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarSInt32* internal_default_instance() {
    return reinterpret_cast<const ScalarSInt32*>(
               &_ScalarSInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ScalarSInt32& a, ScalarSInt32& b) {
    a.Swap(&b);
  }
  inline void Swap(ScalarSInt32* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ScalarSInt32* New() const final {
    return CreateMaybeMessage<ScalarSInt32>(nullptr);
  }

  ScalarSInt32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ScalarSInt32>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ScalarSInt32& from);
  void MergeFrom(const ScalarSInt32& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarSInt32* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ScalarSInt32";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // sint32 data = 1;
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::int32 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ScalarSInt32)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ScalarSInt64 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ScalarSInt64) */ {
 public:
  ScalarSInt64();
  virtual ~ScalarSInt64();

  ScalarSInt64(const ScalarSInt64& from);
  ScalarSInt64(ScalarSInt64&& from) noexcept
    : ScalarSInt64() {
    *this = ::std::move(from);
  }

  inline ScalarSInt64& operator=(const ScalarSInt64& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarSInt64& operator=(ScalarSInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ScalarSInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarSInt64* internal_default_instance() {
    return reinterpret_cast<const ScalarSInt64*>(
               &_ScalarSInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ScalarSInt64& a, ScalarSInt64& b) {
    a.Swap(&b);
  }
  inline void Swap(ScalarSInt64* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ScalarSInt64* New() const final {
    return CreateMaybeMessage<ScalarSInt64>(nullptr);
  }

  ScalarSInt64* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ScalarSInt64>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ScalarSInt64& from);
  void MergeFrom(const ScalarSInt64& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarSInt64* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ScalarSInt64";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // sint64 data = 1;
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::int64 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ScalarSInt64)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ScalarFloat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ScalarFloat) */ {
 public:
  ScalarFloat();
  virtual ~ScalarFloat();

  ScalarFloat(const ScalarFloat& from);
  ScalarFloat(ScalarFloat&& from) noexcept
    : ScalarFloat() {
    *this = ::std::move(from);
  }

  inline ScalarFloat& operator=(const ScalarFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarFloat& operator=(ScalarFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ScalarFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarFloat* internal_default_instance() {
    return reinterpret_cast<const ScalarFloat*>(
               &_ScalarFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ScalarFloat& a, ScalarFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(ScalarFloat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ScalarFloat* New() const final {
    return CreateMaybeMessage<ScalarFloat>(nullptr);
  }

  ScalarFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ScalarFloat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ScalarFloat& from);
  void MergeFrom(const ScalarFloat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarFloat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ScalarFloat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // float data = 1;
  void clear_data();
  float data() const;
  void set_data(float value);
  private:
  float _internal_data() const;
  void _internal_set_data(float value);
  public:

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ScalarFloat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  float data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ScalarDouble :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ScalarDouble) */ {
 public:
  ScalarDouble();
  virtual ~ScalarDouble();

  ScalarDouble(const ScalarDouble& from);
  ScalarDouble(ScalarDouble&& from) noexcept
    : ScalarDouble() {
    *this = ::std::move(from);
  }

  inline ScalarDouble& operator=(const ScalarDouble& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarDouble& operator=(ScalarDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ScalarDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScalarDouble* internal_default_instance() {
    return reinterpret_cast<const ScalarDouble*>(
               &_ScalarDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ScalarDouble& a, ScalarDouble& b) {
    a.Swap(&b);
  }
  inline void Swap(ScalarDouble* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ScalarDouble* New() const final {
    return CreateMaybeMessage<ScalarDouble>(nullptr);
  }

  ScalarDouble* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ScalarDouble>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ScalarDouble& from);
  void MergeFrom(const ScalarDouble& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScalarDouble* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ScalarDouble";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // double data = 1;
  void clear_data();
  double data() const;
  void set_data(double value);
  private:
  double _internal_data() const;
  void _internal_set_data(double value);
  public:

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ScalarDouble)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ArrayUInt32 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ArrayUInt32) */ {
 public:
  ArrayUInt32();
  virtual ~ArrayUInt32();

  ArrayUInt32(const ArrayUInt32& from);
  ArrayUInt32(ArrayUInt32&& from) noexcept
    : ArrayUInt32() {
    *this = ::std::move(from);
  }

  inline ArrayUInt32& operator=(const ArrayUInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArrayUInt32& operator=(ArrayUInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArrayUInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayUInt32* internal_default_instance() {
    return reinterpret_cast<const ArrayUInt32*>(
               &_ArrayUInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ArrayUInt32& a, ArrayUInt32& b) {
    a.Swap(&b);
  }
  inline void Swap(ArrayUInt32* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArrayUInt32* New() const final {
    return CreateMaybeMessage<ArrayUInt32>(nullptr);
  }

  ArrayUInt32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArrayUInt32>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArrayUInt32& from);
  void MergeFrom(const ArrayUInt32& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArrayUInt32* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ArrayUInt32";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated uint32 data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_data() const;
  void _internal_add_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 data(int index) const;
  void set_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ArrayUInt32)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ArrayUInt64 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ArrayUInt64) */ {
 public:
  ArrayUInt64();
  virtual ~ArrayUInt64();

  ArrayUInt64(const ArrayUInt64& from);
  ArrayUInt64(ArrayUInt64&& from) noexcept
    : ArrayUInt64() {
    *this = ::std::move(from);
  }

  inline ArrayUInt64& operator=(const ArrayUInt64& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArrayUInt64& operator=(ArrayUInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArrayUInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayUInt64* internal_default_instance() {
    return reinterpret_cast<const ArrayUInt64*>(
               &_ArrayUInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ArrayUInt64& a, ArrayUInt64& b) {
    a.Swap(&b);
  }
  inline void Swap(ArrayUInt64* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArrayUInt64* New() const final {
    return CreateMaybeMessage<ArrayUInt64>(nullptr);
  }

  ArrayUInt64* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArrayUInt64>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArrayUInt64& from);
  void MergeFrom(const ArrayUInt64& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArrayUInt64* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ArrayUInt64";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated uint64 data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_data() const;
  void _internal_add_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 data(int index) const;
  void set_data(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_data(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ArrayUInt64)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ArraySInt32 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ArraySInt32) */ {
 public:
  ArraySInt32();
  virtual ~ArraySInt32();

  ArraySInt32(const ArraySInt32& from);
  ArraySInt32(ArraySInt32&& from) noexcept
    : ArraySInt32() {
    *this = ::std::move(from);
  }

  inline ArraySInt32& operator=(const ArraySInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArraySInt32& operator=(ArraySInt32&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArraySInt32& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArraySInt32* internal_default_instance() {
    return reinterpret_cast<const ArraySInt32*>(
               &_ArraySInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ArraySInt32& a, ArraySInt32& b) {
    a.Swap(&b);
  }
  inline void Swap(ArraySInt32* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArraySInt32* New() const final {
    return CreateMaybeMessage<ArraySInt32>(nullptr);
  }

  ArraySInt32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArraySInt32>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArraySInt32& from);
  void MergeFrom(const ArraySInt32& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArraySInt32* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ArraySInt32";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated sint32 data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_data() const;
  void _internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 data(int index) const;
  void set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ArraySInt32)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ArraySInt64 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ArraySInt64) */ {
 public:
  ArraySInt64();
  virtual ~ArraySInt64();

  ArraySInt64(const ArraySInt64& from);
  ArraySInt64(ArraySInt64&& from) noexcept
    : ArraySInt64() {
    *this = ::std::move(from);
  }

  inline ArraySInt64& operator=(const ArraySInt64& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArraySInt64& operator=(ArraySInt64&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArraySInt64& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArraySInt64* internal_default_instance() {
    return reinterpret_cast<const ArraySInt64*>(
               &_ArraySInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ArraySInt64& a, ArraySInt64& b) {
    a.Swap(&b);
  }
  inline void Swap(ArraySInt64* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArraySInt64* New() const final {
    return CreateMaybeMessage<ArraySInt64>(nullptr);
  }

  ArraySInt64* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArraySInt64>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArraySInt64& from);
  void MergeFrom(const ArraySInt64& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArraySInt64* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ArraySInt64";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated sint64 data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_data() const;
  void _internal_add_data(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 data(int index) const;
  void set_data(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_data(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ArraySInt64)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ArrayFloat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ArrayFloat) */ {
 public:
  ArrayFloat();
  virtual ~ArrayFloat();

  ArrayFloat(const ArrayFloat& from);
  ArrayFloat(ArrayFloat&& from) noexcept
    : ArrayFloat() {
    *this = ::std::move(from);
  }

  inline ArrayFloat& operator=(const ArrayFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArrayFloat& operator=(ArrayFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArrayFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayFloat* internal_default_instance() {
    return reinterpret_cast<const ArrayFloat*>(
               &_ArrayFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ArrayFloat& a, ArrayFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(ArrayFloat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArrayFloat* New() const final {
    return CreateMaybeMessage<ArrayFloat>(nullptr);
  }

  ArrayFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArrayFloat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArrayFloat& from);
  void MergeFrom(const ArrayFloat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArrayFloat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ArrayFloat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated float data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  float _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_data() const;
  void _internal_add_data(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_data();
  public:
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ArrayFloat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// -------------------------------------------------------------------

class ArrayDouble :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:SmartSimProtobuf.ArrayDouble) */ {
 public:
  ArrayDouble();
  virtual ~ArrayDouble();

  ArrayDouble(const ArrayDouble& from);
  ArrayDouble(ArrayDouble&& from) noexcept
    : ArrayDouble() {
    *this = ::std::move(from);
  }

  inline ArrayDouble& operator=(const ArrayDouble& from) {
    CopyFrom(from);
    return *this;
  }
  inline ArrayDouble& operator=(ArrayDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ArrayDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArrayDouble* internal_default_instance() {
    return reinterpret_cast<const ArrayDouble*>(
               &_ArrayDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ArrayDouble& a, ArrayDouble& b) {
    a.Swap(&b);
  }
  inline void Swap(ArrayDouble* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ArrayDouble* New() const final {
    return CreateMaybeMessage<ArrayDouble>(nullptr);
  }

  ArrayDouble* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ArrayDouble>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ArrayDouble& from);
  void MergeFrom(const ArrayDouble& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArrayDouble* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "SmartSimProtobuf.ArrayDouble";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_smartsim_5fprotobuf_2eproto);
    return ::descriptor_table_smartsim_5fprotobuf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimensionFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // repeated uint64 dimension = 1 [packed = true];
  int dimension_size() const;
  private:
  int _internal_dimension_size() const;
  public:
  void clear_dimension();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_dimension(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_dimension() const;
  void _internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_dimension();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 dimension(int index) const;
  void set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      dimension() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_dimension();

  // repeated double data = 2 [packed = true];
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  private:
  double _internal_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_data() const;
  void _internal_add_data(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_data();
  public:
  double data(int index) const;
  void set_data(int index, double value);
  void add_data(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:SmartSimProtobuf.ArrayDouble)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > dimension_;
  mutable std::atomic<int> _dimension_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > data_;
  mutable std::atomic<int> _data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_smartsim_5fprotobuf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ScalarUInt32

// uint32 data = 1;
inline void ScalarUInt32::clear_data() {
  data_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ScalarUInt32::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ScalarUInt32::data() const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ScalarUInt32.data)
  return _internal_data();
}
inline void ScalarUInt32::_internal_set_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  data_ = value;
}
inline void ScalarUInt32::set_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ScalarUInt32.data)
}

// -------------------------------------------------------------------

// ScalarUInt64

// uint64 data = 1;
inline void ScalarUInt64::clear_data() {
  data_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ScalarUInt64::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ScalarUInt64::data() const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ScalarUInt64.data)
  return _internal_data();
}
inline void ScalarUInt64::_internal_set_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  data_ = value;
}
inline void ScalarUInt64::set_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ScalarUInt64.data)
}

// -------------------------------------------------------------------

// ScalarSInt32

// sint32 data = 1;
inline void ScalarSInt32::clear_data() {
  data_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ScalarSInt32::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ScalarSInt32::data() const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ScalarSInt32.data)
  return _internal_data();
}
inline void ScalarSInt32::_internal_set_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  data_ = value;
}
inline void ScalarSInt32::set_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ScalarSInt32.data)
}

// -------------------------------------------------------------------

// ScalarSInt64

// sint64 data = 1;
inline void ScalarSInt64::clear_data() {
  data_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ScalarSInt64::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ScalarSInt64::data() const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ScalarSInt64.data)
  return _internal_data();
}
inline void ScalarSInt64::_internal_set_data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  data_ = value;
}
inline void ScalarSInt64::set_data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ScalarSInt64.data)
}

// -------------------------------------------------------------------

// ScalarFloat

// float data = 1;
inline void ScalarFloat::clear_data() {
  data_ = 0;
}
inline float ScalarFloat::_internal_data() const {
  return data_;
}
inline float ScalarFloat::data() const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ScalarFloat.data)
  return _internal_data();
}
inline void ScalarFloat::_internal_set_data(float value) {
  
  data_ = value;
}
inline void ScalarFloat::set_data(float value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ScalarFloat.data)
}

// -------------------------------------------------------------------

// ScalarDouble

// double data = 1;
inline void ScalarDouble::clear_data() {
  data_ = 0;
}
inline double ScalarDouble::_internal_data() const {
  return data_;
}
inline double ScalarDouble::data() const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ScalarDouble.data)
  return _internal_data();
}
inline void ScalarDouble::_internal_set_data(double value) {
  
  data_ = value;
}
inline void ScalarDouble::set_data(double value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ScalarDouble.data)
}

// -------------------------------------------------------------------

// ArrayUInt32

// repeated uint64 dimension = 1 [packed = true];
inline int ArrayUInt32::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArrayUInt32::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArrayUInt32::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayUInt32::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayUInt32::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayUInt32.dimension)
  return _internal_dimension(index);
}
inline void ArrayUInt32::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayUInt32.dimension)
}
inline void ArrayUInt32::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArrayUInt32::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayUInt32.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayUInt32::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayUInt32::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayUInt32.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayUInt32::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayUInt32::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayUInt32.dimension)
  return _internal_mutable_dimension();
}

// repeated uint32 data = 2 [packed = true];
inline int ArrayUInt32::_internal_data_size() const {
  return data_.size();
}
inline int ArrayUInt32::data_size() const {
  return _internal_data_size();
}
inline void ArrayUInt32::clear_data() {
  data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ArrayUInt32::_internal_data(int index) const {
  return data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ArrayUInt32::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayUInt32.data)
  return _internal_data(index);
}
inline void ArrayUInt32::set_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayUInt32.data)
}
inline void ArrayUInt32::_internal_add_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  data_.Add(value);
}
inline void ArrayUInt32::add_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayUInt32.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ArrayUInt32::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ArrayUInt32::data() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayUInt32.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ArrayUInt32::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ArrayUInt32::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayUInt32.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// ArrayUInt64

// repeated uint64 dimension = 1 [packed = true];
inline int ArrayUInt64::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArrayUInt64::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArrayUInt64::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayUInt64::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayUInt64::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayUInt64.dimension)
  return _internal_dimension(index);
}
inline void ArrayUInt64::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayUInt64.dimension)
}
inline void ArrayUInt64::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArrayUInt64::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayUInt64.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayUInt64::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayUInt64::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayUInt64.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayUInt64::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayUInt64::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayUInt64.dimension)
  return _internal_mutable_dimension();
}

// repeated uint64 data = 2 [packed = true];
inline int ArrayUInt64::_internal_data_size() const {
  return data_.size();
}
inline int ArrayUInt64::data_size() const {
  return _internal_data_size();
}
inline void ArrayUInt64::clear_data() {
  data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayUInt64::_internal_data(int index) const {
  return data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayUInt64::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayUInt64.data)
  return _internal_data(index);
}
inline void ArrayUInt64::set_data(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayUInt64.data)
}
inline void ArrayUInt64::_internal_add_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  data_.Add(value);
}
inline void ArrayUInt64::add_data(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayUInt64.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayUInt64::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayUInt64::data() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayUInt64.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayUInt64::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayUInt64::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayUInt64.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// ArraySInt32

// repeated uint64 dimension = 1 [packed = true];
inline int ArraySInt32::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArraySInt32::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArraySInt32::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArraySInt32::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArraySInt32::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArraySInt32.dimension)
  return _internal_dimension(index);
}
inline void ArraySInt32::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArraySInt32.dimension)
}
inline void ArraySInt32::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArraySInt32::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArraySInt32.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArraySInt32::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArraySInt32::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArraySInt32.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArraySInt32::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArraySInt32::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArraySInt32.dimension)
  return _internal_mutable_dimension();
}

// repeated sint32 data = 2 [packed = true];
inline int ArraySInt32::_internal_data_size() const {
  return data_.size();
}
inline int ArraySInt32::data_size() const {
  return _internal_data_size();
}
inline void ArraySInt32::clear_data() {
  data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ArraySInt32::_internal_data(int index) const {
  return data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ArraySInt32::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArraySInt32.data)
  return _internal_data(index);
}
inline void ArraySInt32::set_data(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArraySInt32.data)
}
inline void ArraySInt32::_internal_add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  data_.Add(value);
}
inline void ArraySInt32::add_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArraySInt32.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ArraySInt32::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ArraySInt32::data() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArraySInt32.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ArraySInt32::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ArraySInt32::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArraySInt32.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// ArraySInt64

// repeated uint64 dimension = 1 [packed = true];
inline int ArraySInt64::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArraySInt64::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArraySInt64::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArraySInt64::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArraySInt64::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArraySInt64.dimension)
  return _internal_dimension(index);
}
inline void ArraySInt64::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArraySInt64.dimension)
}
inline void ArraySInt64::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArraySInt64::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArraySInt64.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArraySInt64::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArraySInt64::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArraySInt64.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArraySInt64::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArraySInt64::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArraySInt64.dimension)
  return _internal_mutable_dimension();
}

// repeated sint64 data = 2 [packed = true];
inline int ArraySInt64::_internal_data_size() const {
  return data_.size();
}
inline int ArraySInt64::data_size() const {
  return _internal_data_size();
}
inline void ArraySInt64::clear_data() {
  data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ArraySInt64::_internal_data(int index) const {
  return data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ArraySInt64::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArraySInt64.data)
  return _internal_data(index);
}
inline void ArraySInt64::set_data(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArraySInt64.data)
}
inline void ArraySInt64::_internal_add_data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  data_.Add(value);
}
inline void ArraySInt64::add_data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArraySInt64.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ArraySInt64::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
ArraySInt64::data() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArraySInt64.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ArraySInt64::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
ArraySInt64::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArraySInt64.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// ArrayFloat

// repeated uint64 dimension = 1 [packed = true];
inline int ArrayFloat::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArrayFloat::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArrayFloat::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayFloat::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayFloat::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayFloat.dimension)
  return _internal_dimension(index);
}
inline void ArrayFloat::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayFloat.dimension)
}
inline void ArrayFloat::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArrayFloat::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayFloat.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayFloat::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayFloat::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayFloat.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayFloat::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayFloat::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayFloat.dimension)
  return _internal_mutable_dimension();
}

// repeated float data = 2 [packed = true];
inline int ArrayFloat::_internal_data_size() const {
  return data_.size();
}
inline int ArrayFloat::data_size() const {
  return _internal_data_size();
}
inline void ArrayFloat::clear_data() {
  data_.Clear();
}
inline float ArrayFloat::_internal_data(int index) const {
  return data_.Get(index);
}
inline float ArrayFloat::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayFloat.data)
  return _internal_data(index);
}
inline void ArrayFloat::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayFloat.data)
}
inline void ArrayFloat::_internal_add_data(float value) {
  data_.Add(value);
}
inline void ArrayFloat::add_data(float value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayFloat.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ArrayFloat::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ArrayFloat::data() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayFloat.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ArrayFloat::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ArrayFloat::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayFloat.data)
  return _internal_mutable_data();
}

// -------------------------------------------------------------------

// ArrayDouble

// repeated uint64 dimension = 1 [packed = true];
inline int ArrayDouble::_internal_dimension_size() const {
  return dimension_.size();
}
inline int ArrayDouble::dimension_size() const {
  return _internal_dimension_size();
}
inline void ArrayDouble::clear_dimension() {
  dimension_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayDouble::_internal_dimension(int index) const {
  return dimension_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ArrayDouble::dimension(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayDouble.dimension)
  return _internal_dimension(index);
}
inline void ArrayDouble::set_dimension(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayDouble.dimension)
}
inline void ArrayDouble::_internal_add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  dimension_.Add(value);
}
inline void ArrayDouble::add_dimension(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_dimension(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayDouble.dimension)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayDouble::_internal_dimension() const {
  return dimension_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ArrayDouble::dimension() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayDouble.dimension)
  return _internal_dimension();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayDouble::_internal_mutable_dimension() {
  return &dimension_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ArrayDouble::mutable_dimension() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayDouble.dimension)
  return _internal_mutable_dimension();
}

// repeated double data = 2 [packed = true];
inline int ArrayDouble::_internal_data_size() const {
  return data_.size();
}
inline int ArrayDouble::data_size() const {
  return _internal_data_size();
}
inline void ArrayDouble::clear_data() {
  data_.Clear();
}
inline double ArrayDouble::_internal_data(int index) const {
  return data_.Get(index);
}
inline double ArrayDouble::data(int index) const {
  // @@protoc_insertion_point(field_get:SmartSimProtobuf.ArrayDouble.data)
  return _internal_data(index);
}
inline void ArrayDouble::set_data(int index, double value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:SmartSimProtobuf.ArrayDouble.data)
}
inline void ArrayDouble::_internal_add_data(double value) {
  data_.Add(value);
}
inline void ArrayDouble::add_data(double value) {
  _internal_add_data(value);
  // @@protoc_insertion_point(field_add:SmartSimProtobuf.ArrayDouble.data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ArrayDouble::_internal_data() const {
  return data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ArrayDouble::data() const {
  // @@protoc_insertion_point(field_list:SmartSimProtobuf.ArrayDouble.data)
  return _internal_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ArrayDouble::_internal_mutable_data() {
  return &data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ArrayDouble::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:SmartSimProtobuf.ArrayDouble.data)
  return _internal_mutable_data();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace SmartSimProtobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_smartsim_5fprotobuf_2eproto
